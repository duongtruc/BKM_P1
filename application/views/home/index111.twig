{% extends "_templates/base.twig" %}
{% block javascript %}
{% endblock %}
{% block content %}
    <div class="main-content clearfix">
        <div class="container">
            <div class="span6">
                <input id="screen" type="text"><br><br>
                <button class="btn-small"><strong>(</strong></button>
                <button class="btn-small"><strong>)</strong></button>
                <button class="btn-small"><strong>^</strong></button>
                <button class="btn-small"><strong>sin</strong></button>
                <button class="btn-small"><strong>cos</strong></button>
                <button class="btn-small"><strong>tan</strong></button>
                <button class="btn-small"><strong>log</strong></button><br>
                <button class="btn-number"><strong>6</strong></button>
                <button class="btn-number"><strong>7</strong></button>
                <button class="btn-number"><strong>8</strong></button>
                <button class="btn-number"><strong>9</strong></button>
                <button class="btn-del btn-func"><strong>DEL</strong></button>
                <button class="btn-clr btn-func"><strong>AC</strong></button><br>
                <button class="btn-number"><strong>2</strong></button>
                <button class="btn-number"><strong>3</strong></button>
                <button class="btn-number"><strong>4</strong></button>
                <button class="btn-number"><strong>5</strong></button>
                <button class="btn-number btn-func"><strong>+</strong></button>
                <button class="btn-number btn-func"><strong>-</strong></button><br>
                <button class="btn-number"><strong>0</strong></button>
                <button class="btn-number"><strong>1</strong></button>
                <button class="btn-number"><strong>.</strong></button>
                <button class="btn-number"><strong>e</strong></button>
                <button class="btn-number btn-func"><strong>x</strong></button>
                <button class="btn-number btn-func"><strong>/</strong></button><br>
                <button class="btn-number" id="btn-ans"><strong>Ans</strong></button>
                <button class="btn-result"><strong>=</strong></button>
            </div>
        </div>
    </div>
    <script type="application/javascript">
        var ans = 0;//The current result;
        /*
        Main function
        @author:
        @param :
            expression: string
        @return : real || "error"
         */
        var base=0, plus=0, multi= 1, pow= 2, baseInc= 3;

        function power(base,exponent){
            var res=1;
            for(i=0;i<exponent;i++) res*=base;
            return res;
        }

        function isOperator(operator){
            if (operator=='+'||operator=='-'||operator=='x'||operator=='/'||operator=='^') return true;
            else return false;
        }

        function getResult(operands, operators){
            while (operators.length!=0){
                var pos= 0, max=Math.max.apply(null,operators);
                for (i=0;operators[i]!=max;i++) pos++;
                switch (operators[pos]%baseInc){
                    case plus:
                        operands[pos+1]+=operands[pos];
                        break;
                    case multi:
                        operands[pos+1]*=operands[pos];
                        break;
                    case pow:
                        operands[pos+1]=power(operands[pos],operands[pos+1]);
                        break;
                }
                operands.splice(pos,1);
                operators.splice(pos,1);
            }
            return operands[0];
        }
        function calculate(expression) {
            //TODO - analysis the expression for result; return "error" if has error
            var notInverse=true, number= 1, negativeFst;
            var operand=[], operator=[];
			
            // Separate and calculate privilege of operators and operands
            if (isOperator(expression[expression.length-1])||isOperator(expression[0])&&expression[0]!='-')
                return "syntax ERROR.";
            if (expression[0]!='-') negativeFst=false; else negativeFst=true;
			
            for (i=0;i<expression.length;i++){
                if (i+1<expression.length&&isOperator(expression[i])&&isOperator(expression[i+1]))
                    return"syntax ERROR.";
                if (base<0)
                    return"syntax ERROR.";
                switch (expression[i]){
                    case '(': base+=baseInc; break;
                    case ')': base-=baseInc;break;
                    case '+': {
                        notInverse=true;
                        operand[operand.length]=number;
                        number=1;
                        operator[operator.length]=base+plus; break;
                    }
                    case 'x': {
                        notInverse=true;
                        operand[operand.length]=number;
                        number=1;
                        operator[operator.length]=base+multi; break;
                    }
                    case '^': {
                        notInverse=true;
                        operand[operand.length]=number;
                        number=1;
                        operator[operator.length]=base+pow; break;
                    }
                    case '-': {
                        notInverse=true;
                        if (operand.length!=0||!negativeFst){
                            operand[operand.length]=number;
                            operator[operator.length]=base+plus;
                        }
                        number=-1; break;
                    }
                    case '/': {
                        notInverse=false;
                        operand[operand.length]=number;
                        number=1;
                        operator[operator.length]=base+multi; break;
                    }
                    case '0':
                    case '1':
                    case '2':
                    case '3':
                    case '4':
                    case '5':
                    case '6':
                    case '7':
                    case '8':
                    case '9':
                    {
                        if(notInverse){
                            if(i==0||expression[i-1]=='+'||expression[i-1]=='-'||expression[i-1]=='x'||expression[i-1]=='^'||expression[i-1]=='(')
                                number*=(expression[i]-'0');
                            else if(expression[i-1]-'0'<10&&expression[i-1]-'0'>-1) {
                                number=number*10+(expression[i]-'0');
                            }
                        }
                        else{
                            if (expression[i-1]=='/') number/=(expression[i]-'0');
                            else number=1/(1/number*10+(expression[i]-'0'));
                        }
                        break;
                    }
                }
            }

            operand[operand.length]=number;
            if (operator.length==0) {
                if (operand.length==0) return "";
                else return operand[0];
            }
            else return getResult(operand,operator);
        }

        $(document).ready(function() {
            //For number and operator button
            $(".btn-number, .btn-small").on('click', function() {
                if ($(this).prop("id") != "btn-ans") {
                    $("#screen").val($("#screen").val() + $(this).text());
                }
            });
            //For del button
            $(".btn-del").on("click", function() {
                var s = $("#screen").val();
                $("#screen").val(s.substring(0, s.length - 1));
            });
            //For ans button
            $("#btn-ans").on('click', function() {
                $("#screen").val($("#screen").val() + ans.toString());
            });
            //For AC button
            $(".btn-clr").on("click", function() {
                $("#screen").val("");
            });
            //For getting result
            $(".btn-result").on('click', function() {
                var expression = $("#screen").val();
                var result = calculate(expression);
                if (result != 'error')
                    ans = result;
                $("#screen").val(result);
            });
        });
    </script>
{% endblock %}
